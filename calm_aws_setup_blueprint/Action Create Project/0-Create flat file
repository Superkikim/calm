#!/usr/bin/env python

# Name: 		Create flat file
# Type:         Execute
# Script type:  Shell
# Description:  Create a flat file named after the project name Variable
#               and save variables inside
# Script Type:  Shell

# Script:

import shelve, sys, re, os.path

# Validate project name
try:
    reg=re.compile('^[a-zA-Z0-9\_]+$')
    if not reg.match('@@{project_name}@@'):
        raise Exception('The project name can only contain A-Z, a-z, 0-9 and underscore characters')
except Exception as error:
    print('Project name validation failed: %s' % (error))
    sys.exit(1)

# Check if project exist
try:
    if os.path.exists("@@{project_name}@@.db"):
        raise Exception('This project already exist. Please use a unique project name')
except Exception as error:
    print('Error while creating a new project: %s' % (error))
    sys.exit(1)

try:
    db = shelve.open("@@{project_name}@@.db")
    db["project"] = "@@{project_name}@@"
    db["secret"] = "@@{aws_secret_access_key}@@"
    db["key"] = "@@{aws_access_key_id}@@"
    db["region"] = "@@{region}@@"
    db["cidr"] = "@@{cidr}@@"
    db["subnet"] = "@@{subnet}@@"
    db["ami_id"] = "@@{ami_id}@@"
    db["instance_type"] = "@@{instance_type}@@"
    db["tcp_ports"] = "@@{tcp_ports}@@"
    db["udp_ports"] = "@@{udp_ports}@@"
    db["pc_user"] = "@@{pc_user}@@"
    db["pc_password"] = "@@{pc_password}@@"
except Exception as error:
    print('Error while creating flat file: %s' % (error))
    sys.exit(1)

for key in list(db.keys()):
    print(key+": "+db[key])

try:
    db.sync()
    db.close()
except Exception as error:
    print('Failed to save variables to flat file: %s' % (error))
    sys.exit(1)

sys.exit(0)
